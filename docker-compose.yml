services:
  frontend:
    build: ./frontend
    container_name: frontend
    depends_on:
      - backend
    restart: always
    volumes:
      - ./frontend:/docker/frontend
    ports:
      - '80:80'
    networks:
      - custom
      
  backend:
    build: ./backend
    container_name: backend
    ports:
      - '3000'
    depends_on:
      - postgres
    env_file:
      - ./backend/.env
    restart: always
    networks:
      - custom
    volumes:
      - ./backend:/docker/backend

  bot:
    build: ./bot
    restart: always

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: delearn
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - '5444:5432'
    restart: always
    networks:
      - custom

  # nginx:
    # image: nginx:alpine
    # container_name: nginx
    # ports:
    #   - '80:80'
    # depends_on:
    #   - frontend
    #   - backend
    # volumes:
    #   - ./frontend/nginx.conf:/etc/nginx/conf.d/app.conf
    # restart: always
    # networks:
    #   - custom

volumes:
  pgdata:
    driver: local

networks:
  custom:
    driver: bridge
